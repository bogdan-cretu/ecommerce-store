{"ast":null,"code":"var _jsxFileName = \"/Users/donkeydesktop/Desktop/MERN COURSE/Personal projects/e-commerce/all purpose store git/ecommerce-store/src/Components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createClient } from \"@sanity/client\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function getProducts() {\n  const client = createClient({\n    projectId: '63xf4beu',\n    dataset: 'store',\n    apiVersion: \"2024-01-19\",\n    useCdn: true\n  });\n  return client.fetch(`*[_type == \"product\"]`);\n}\nconst products = await getProducts();\nconst SearchBar = () => {\n  _s();\n  const [search, setSearch] = useState('');\n  function captureChange(event) {\n    const searchQuery = event.target.value;\n    if (searchQuery.length >= 2) {\n      setSearch(searchQuery);\n    } else {\n      setSearch('');\n    }\n  }\n  const searchItems = products.map(item => {\n    if (search.length >= 2 && item.name.toLowerCase().includes(search)) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"search-product-result\",\n        href: `/product/${item.slug.current}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-thumbnail-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-image-holder\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"thumbnail-pic\",\n              alt: \"\",\n              src: \"https://cdn.sanity.io/images/63xf4beu/store/\" + item.image[0].asset._ref.replace(\"-png\", \".png\").replace(\"-jpg\", \".jpg\").replace(\"image-\", '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search\",\n      placeholder: \"Search...\",\n      onChange: captureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: searchItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 8\n  }, this);\n};\n_s(SearchBar, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","createClient","useState","jsxDEV","_jsxDEV","getProducts","client","projectId","dataset","apiVersion","useCdn","fetch","products","SearchBar","_s","search","setSearch","captureChange","event","searchQuery","target","value","length","searchItems","map","item","name","toLowerCase","includes","className","href","slug","current","children","alt","src","image","asset","_ref","replace","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/donkeydesktop/Desktop/MERN COURSE/Personal projects/e-commerce/all purpose store git/ecommerce-store/src/Components/SearchBar.jsx"],"sourcesContent":["import React from 'react'\nimport { createClient } from \"@sanity/client\";\nimport { useState } from 'react';\n\nasync function getProducts(){\n    const client = createClient({\n        projectId: '63xf4beu',\n        dataset: 'store',\n        apiVersion: \"2024-01-19\",\n        useCdn: true,\n    });\n\n    return client.fetch(\n        `*[_type == \"product\"]`\n    )\n}\n  const products = await getProducts();\n\n\n \n\nconst SearchBar = () => {\n\n    const [search, setSearch] = useState('')\n\n    function captureChange(event){\n        const searchQuery = event.target.value\n        if (searchQuery.length >=2){\n            setSearch(searchQuery)\n            \n        } else{\n            setSearch('')\n        }\n        \n     }\n    \n\n     const searchItems = products.map((item)=>{\n        if (search.length >= 2 && item.name.toLowerCase().includes(search)){\n                return <a className='search-product-result' href={`/product/${item.slug.current}`}>\n                <div className='product-thumbnail-search'>\n                <div className='search-image-holder'>\n                    <img className='thumbnail-pic' alt='' src={\"https://cdn.sanity.io/images/63xf4beu/store/\" + item.image[0].asset._ref.replace(\"-png\", \".png\").replace(\"-jpg\", \".jpg\").replace(\"image-\", '')} />\n                </div>\n                    <p style={{padding:\"10px\"}}>{item.name}</p>\n                </div>\n                </a>\n        }\n        \n        \n     })\n     \nreturn <div className='search-bar'>\n    <input type=\"text\" className='search' placeholder='Search...' onChange={captureChange} ></input>\n    <div className='search-results'>{searchItems}</div>\n    \n</div>\n}\nexport default SearchBar\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}